{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","Components/Footer.js","logo.svg","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","title","onAdd","showAdd","location","useLocation","pathname","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","href","to","About","src","logo","alt","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","console","log","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6QAkBeA,EAbA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC3B,OAAO,yBAAQA,QAASA,EAASC,MAAO,CAAEC,gBAAiBJ,GAASK,UAAU,MAAvE,cAAgFJ,MCkBrFK,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAKtBC,EAAWC,cACjB,OACI,yBAAQN,UAAU,SAAlB,UACI,6BAAKE,IAEkB,MAAtBG,EAASE,UAAqB,cAAC,EAAD,CAAQZ,MAAOS,EAAU,MAAQ,QAASR,KAAMQ,EAAU,QAAU,MAAOP,QAASM,QAM/HF,EAAOO,aAAe,CAClBN,MAAO,gBAaID,Q,QCzCAQ,EATF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5B,OACI,sBAAKZ,UAAS,eAAUU,EAAKG,SAAW,WAAa,IAAMC,cAAe,kBAAMF,EAASF,EAAKK,KAA9F,UACI,+BAAKL,EAAKd,KAAV,IAAgB,cAAC,IAAD,CAASE,MAAO,CAAEH,MAAO,MAAOqB,OAAQ,WAAanB,QAAS,kBAAMc,EAASD,EAAKK,UAClG,4BAAIL,EAAKO,UCUNC,EAbD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOR,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAE9B,OAEI,mCACKO,EAAMC,KAAI,SAACV,EAAMW,GAAP,OAEP,aADA,CACC,EAAD,CAAkBX,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,GAAjDS,SCmCZC,EA3CC,SAAC,GAAe,IAAbnB,EAAY,EAAZA,MAAY,EACHoB,mBAAS,IADN,mBACpB3B,EADoB,KACd4B,EADc,OAELD,mBAAS,IAFJ,mBAEpBN,EAFoB,KAEfQ,EAFe,OAGKF,oBAAS,GAHd,mBAGpBV,EAHoB,KAGVa,EAHU,KAoB3B,OACI,uBAAM1B,UAAU,WAAW2B,SAjBd,SAACC,GAGdA,EAAEC,iBAGGjC,GAILO,EAAM,CAAEP,OAAMqB,MAAKJ,aAEnBW,EAAQ,IACRC,EAAO,IACPC,GAAY,IAPRI,MAAM,sBAUV,UACI,sBAAK9B,UAAU,eAAf,UACI,yCACA,uBAAO+B,KAAK,OAAOC,YAAY,WAAWC,MAAOrC,EAAMsC,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAG7F,sBAAKjC,UAAU,eAAf,UACI,+CACA,uBAAO+B,KAAK,OAAOC,YAAY,iBAAiBC,MAAOhB,EAAKiB,SAAU,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,aAGjG,sBAAKjC,UAAU,kCAAf,UACI,iDACA,uBAAO+B,KAAK,WAAWK,QAASvB,EAAUoB,MAAOpB,EAAUqB,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcD,eAG5G,uBAAOL,KAAK,SAASE,MAAM,YAAYjC,UAAU,sBCzB9CsC,EAZA,WAEX,IAAMjC,EAAWC,cACjB,OACI,mCACI,2CAAa,mBAAGiC,KAAK,+BAAR,6BAAb,gBAEuB,WAAtBlC,EAASE,UAA0B,cAAC,IAAD,CAAMiC,GAAG,SAAT,uBCXjC,MAA0B,iCCc1BC,EAXD,WACV,OACI,gCACI,uDACA,+CACA,qBAAKC,IAAKC,EAAM3C,UAAU,WAAW4C,IAAI,SACzC,cAAC,IAAD,CAAMJ,GAAG,IAAT,yBCmIGK,EAhIH,WAAM,MAMwBtB,oBAAS,GANjC,mBAMPuB,EANO,KAMMC,EANN,OAOYxB,mBAAS,IAPrB,mBAOPJ,EAPO,KAOA6B,EAPA,KASdC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACiBC,IADjB,OACPC,EADO,OAEbJ,EAASI,GAFI,2CAAH,qDAKdC,KACD,IAIH,IAAMF,EAAU,uCAAG,8BAAAD,EAAA,sEACGI,MAAM,+BADT,cACTC,EADS,gBAEIA,EAAIC,OAFR,cAETC,EAFS,OAGfC,QAAQC,IAAIF,GAHG,kBAIRA,GAJQ,2CAAH,qDAQVG,EAAS,uCAAG,WAAO7C,GAAP,iBAAAmC,EAAA,sEACII,MAAM,+BAAD,OAAgCvC,IADzC,cACRwC,EADQ,gBAEKA,EAAIC,OAFT,cAERC,EAFQ,yBAIPA,GAJO,2CAAH,sDAkBTI,EAAO,uCAAG,WAAOnD,GAAP,iBAAAwC,EAAA,sEACMI,MAAM,8BAA+B,CACnDQ,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUxD,KANb,cACN6C,EADM,gBAQOA,EAAIC,OARX,OAQNC,EARM,OAUZT,EAAS,GAAD,mBAAK7B,GAAL,CAAYsC,KAVR,2CAAH,sDAePU,EAAU,uCAAG,WAAOpD,GAAP,SAAAmC,EAAA,sEACTI,MAAM,+BAAD,OAAgCvC,GAAM,CAAE+C,OAAQ,WAD5C,OAIfd,EAAS7B,EAAMiD,QAAO,SAAC1D,GAAD,OAAUA,EAAKK,KAAOA,MAJ7B,2CAAH,sDAQVsD,EAAc,uCAAG,WAAOtD,GAAP,qBAAAmC,EAAA,sEAEQU,EAAU7C,GAFlB,cAEbuD,EAFa,OAGbC,EAHa,2BAGED,GAHF,IAGgBzD,UAAWyD,EAAazD,WAHxC,SAKDyC,MAAM,+BAAD,OAAgCvC,GAAM,CACzD+C,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUK,KAVN,cAKbhB,EALa,gBAaAA,EAAIC,OAbJ,OAabC,EAba,OAenBT,EACI7B,EAAMC,KAAI,SAACV,GAAD,OACNA,EAAKK,KAAOA,EAAZ,2BAAsBL,GAAtB,IAA4BG,SAAU4C,EAAK5C,WAAaH,MAjB7C,4CAAH,sDAsBpB,OACI,cAAC,IAAD,UAEI,sBAAKV,UAAU,YAAf,UAII,cAAC,EAAD,CAAQG,MAAO,kBAAM4C,GAAgBD,IAAc1C,QAAS0C,IAG5D,cAAC,IAAD,CAAO0B,KAAK,IAAIC,OAAK,EAACC,OAAQ,SAACC,GAAD,OAE1B,cADA,CACA,sBACK7B,GAAe,cAAC,EAAD,CAAS3C,MAAO0D,IAC/B1C,EAAMyD,OAAS,EACZ,cAAC,EAAD,CAAOzD,MAAOA,EAAOR,SAAUwD,EAAYvD,SAAUyD,IAAqB,yBAKtF,cAAC,IAAD,CAAOG,KAAK,SAASK,UAAWpC,IAChC,cAAC,EAAD,UChHDqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASb,OACL,cAAC,IAAMc,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.5e0990bd.chunk.js","sourcesContent":["// import React from 'react'\r\n\r\n// RAFCE\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return <button onClick={onClick} style={{ backgroundColor: color }} className='btn' > {text}</button >\r\n}\r\n\r\n// Button.defaultProps = {\r\n//     color: 'steelblue',\r\n// }\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default Button","// Can be a Class or a Function\r\n\r\n// Extension - ES7 React/Redux/GraphQL/React-Native snippets allows the following shortcuts:\r\n// rcc creates a Class based component\r\n// rce creates a Classs based component but exports down at the bottom\r\n\r\n// rafce - clean arrow function that exports down at the bottom.\r\n\r\n// ALL THESE CAN BE FOUND ON https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets or just in the extension information in VS.\r\n\r\n// Boiler plate arrow function component - rafce\r\n\r\n\r\n\r\n// Used to be required to import every component for react, but we don't need this so can be commented out\r\n// import React from 'react'\r\n\r\n// IMPT - to import prop types\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n// Hide button functionality based on useLocation\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    // const onClick = () => {\r\n    //     console.log('Click')\r\n    // }\r\n    // Hide button functionality based on useLocation\r\n    const location = useLocation()\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {/* Reusable component! */}\r\n            {location.pathname === '/' && (<Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />)}\r\n            {/* <Button color='red' text='Hello 1' /> */}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS IN JS\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'black',\r\n// }\r\n\r\nexport default Header\r\n\r\n// Navigate to App.js and Import Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\n// import React from 'react'\r\n// Pass in props from Tasks.js\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)} >\r\n            <h3>{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} /></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n\r\n// Bring in icons we want to use instead of using a CDN\r\n// npm i react-icons","// import React from 'react'\r\n// rafce\r\n\r\nimport Task from './Task'\r\n// Catch the props from App.js\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\r\n    return (\r\n\r\n        <>\r\n            {tasks.map((task, index) => (\r\n                // <h3 key={task.id}>{task.text}</h3>\r\n                <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","// rafce\r\n// import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    const onSubmit = (e) => {\r\n        // prevent submitting of the button to the page\r\n        // e - event\r\n        e.preventDefault()\r\n\r\n        // validation for the task\r\n        if (!text) {\r\n            alert('Please add a Task');\r\n            return;\r\n        }\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit} >\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type=\"submit\" value='Save Task' className='btn btn-block' />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\n// Hide About link when on the About Page\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    // Hide About link when on the About Page\r\n    const location = useLocation()\r\n    return (\r\n        <footer>\r\n            <p>Copyright <a href=\"http://www.michaelogrady.net\">Michael O'Grady</a> &copy; 2021</p>\r\n            {/* Hide About link when on the About Page */}\r\n            {location.pathname !== '/about' && (<Link to=\"/about\">About</Link>)}\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from '../../src/logo.svg';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h2>I ❤️  React</h2>\r\n            <h4>Version 1.0.0</h4>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport Header from './Components/Header'\r\nimport Tasks from './Components/Tasks'\r\nimport AddTask from './Components/AddTask'\r\nimport Footer from './Components/Footer'\r\nimport About from './Components/About'\r\n\r\n\r\n\r\n// For Function METHOD A\r\nconst App = () => {\r\n    // You can write JavaScript directly in here which makes it really dynamic!\r\n    // const name = 'Michael'\r\n    // const x = true\r\n\r\n\r\n    const [showAddTask, setShowAddTask] = useState(false)\r\n    const [tasks, setTasks] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getTasks = async () => {\r\n            const tasksFromServer = await fetchTasks()\r\n            setTasks(tasksFromServer)\r\n        }\r\n\r\n        getTasks()\r\n    }, [])\r\n\r\n    //   Fetch Tasks\r\n    // Fetch API with Async Await\r\n    const fetchTasks = async () => {\r\n        const res = await fetch('http://localhost:5000/tasks')\r\n        const data = await res.json()\r\n        console.log(data)\r\n        return data\r\n    }\r\n\r\n    // Fetch Task\r\n    const fetchTask = async (id) => {\r\n        const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n\r\n    // Add Task\r\n\r\n    // console.log(task);\r\n    // Get random number\r\n    // const id = Math.floor(Math.random() * 10000) + 1\r\n    // console.log(id)\r\n\r\n    // const newTask = { id, ...task }\r\n    // setTasks([...tasks, newTask])\r\n\r\n    const addTask = async (task) => {\r\n        const res = await fetch('http://localhost:5000/tasks', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(task)\r\n        })\r\n        const data = await res.json()\r\n        // Add the new (data) to the existing tasks\r\n        setTasks([...tasks, data])\r\n    }\r\n\r\n\r\n    // Delete Task\r\n    const deleteTask = async (id) => {\r\n        await fetch(`http://localhost:5000/tasks/${id}`, { method: 'DELETE' })\r\n        // console.log('delete', id)\r\n        // Filter out tasks - delete functionality\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    // Toggle Reminder\r\n    const toggleReminder = async (id) => {\r\n        // console.log(id)\r\n        const taskToToggle = await fetchTask(id)\r\n        const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n\r\n        const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(updTask)\r\n        })\r\n\r\n        const data = await res.json()\r\n\r\n        setTasks(\r\n            tasks.map((task) =>\r\n                task.id === id ? { ...task, reminder: data.reminder } : task\r\n            )\r\n        )\r\n    }\r\n    // JSX Elements must have one parent element only.\r\n    return (\r\n        <Router>\r\n\r\n            <div className='container'>\r\n                {/* <h2>Hello {name}</h2>\r\n            <h3>Hello {x ? 'Yes' : 'No'}</h3> */}\r\n\r\n                <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\r\n                {/* Shorter way of doing a ternerary operator, dont need an else */}\r\n\r\n                <Route path='/' exact render={(props) => (\r\n                    // Fragment\r\n                    <>\r\n                        {showAddTask && <AddTask onAdd={addTask} />}\r\n                        {tasks.length > 0 ?\r\n                            <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No Tasks To Show'\r\n                        }\r\n\r\n                    </>\r\n                )} />\r\n                <Route path='/about' component={About} />\r\n                <Footer />\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\n// To Import a Class you need to import React from 'react'\r\n\r\n// For Class Component METHOD B\r\n// import React from 'react'\r\n// class App extends React.Component {\r\n//     render() {\r\n//         return <h1>Hello from a Class</h1>\r\n//     }\r\n// }\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n// Remember, this is just a front end application, it's not dynamic, unless you connect it to a backend to make requests to, AKA JSON Server"],"sourceRoot":""}